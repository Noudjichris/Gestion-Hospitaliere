<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /xHwL/QO4PtH6RGkAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="button6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>